---
- name: Check SAP HANA replication status
  shell: "su - {{ hana_sid|lower }}adm -c 'hdbnsutil -sr_state --sapcontrol=1'"
  args:
    warn: false
  register: repl_status_output
  changed_when: False

- name: Set SAP HANA replication status variable
  set_fact:
    replication: "yes"
  when: repl_status_output.stdout.find('operation mode=primary') == -1 and repl_status_output.stdout.find('mode=none') == -1

- name: The list of SAP HANA tenant databases
  set_fact:
    tenants: "{{ hana_tenants.split(',') | list | upper }}"

# Backup parameters for SYSTEMDB
- name: Check the status of all backup parameters for SAP HANA SYSTEMDB
  shell: |
    export HISTCONTROL=ignorespace
     su - {{ hana_sid|lower }}adm -c "hdbsql -d SYSTEMDB -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"select key, value from M_CONFIGURATION_PARAMETER_VALUES where file_name = 'global.ini' and layer_name = 'SYSTEM' and section = 'backup' and key = '{{ p_system.key }}'  and value = '{{ p_system.value }}'\""
  args:
    warn: false
  loop: "{{ backup_parameters | dict2items }}"
  loop_control:
    loop_var: p_system
  register: systemdb_param_status
  when: replication is not defined and backup_parameters is defined
  changed_when: False
  no_log: True

- name: Create the list of parameters which are not set or are incorrectly set for SAP HANA SYSTEMDB backup in IBM Cloud Object Storage
  set_fact:
    systemdb_param_to_set: "{{ systemdb_param_to_set|default([]) + [p_systemtoset.p_system] }}"
  loop: "{{ systemdb_param_status.results | list }}"
  loop_control:
    loop_var: p_systemtoset
  when: 'replication is not defined and systemdb_param_status is defined and ("KEY,VALUE\n0 rows selected" in p_systemtoset.stdout)'
  no_log: True

- name: Display the list of parameters to be set for SAP HANA SYSTEMDB backup in IBM Cloud Object Storage
  debug:
    var: systemdb_param_to_set
  when: replication is not defined and systemdb_param_to_set is defined

- name: Set the parameters for SAP HANA SYSTEMDB in order to enable the backup in IBM Cloud Object Storage
  shell: |
    export HISTCONTROL=ignorespace
     su - {{ hana_sid|lower }}adm -c "hdbsql -d SYSTEMDB -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"ALTER SYSTEM ALTER CONFIGURATION ('global.ini', 'SYSTEM') SET ('backup' , '{{ item_systemdb.key }}') = '{{ item_systemdb.value }}' WITH RECONFIGURE\""
  args:
    warn: false
  loop: "{{ systemdb_param_to_set | list }}"
  loop_control:
    loop_var: item_systemdb
  no_log: True
  when: replication is not defined and systemdb_param_to_set is defined

# Backup parameters for tenant databases
- name: Check the status of all backup parameters for all SAP HANA tenant databases
  shell: |
    export HISTCONTROL=ignorespace
     su - {{ hana_sid|lower }}adm -c "hdbsql -d {{ item.0 }} -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"select key, value from M_CONFIGURATION_PARAMETER_VALUES where file_name = 'global.ini' and layer_name = 'DATABASE' and section = 'backup' and key = '{{ item.1.key }}' and value != '{{ item.1.value }}'\""
  args:
    warn: false
  with_nested:
    - "{{ tenants | list }}"
    - "{{ backup_parameters | dict2items }}"
  when: replication is not defined and backup_parameters is defined and tenants is defined
  register: tenant_param_status
  changed_when: False
  no_log: True

- name: Create the list of parameters which are not set or are incorrectly set all SAP HANA tenant databases backup in IBM Cloud Object Storage
  set_fact:
    tenant_param_to_set: "{{ tenant_param_to_set|default([]) + [tenant_param_res.item] }}"
  loop: "{{ tenant_param_status.results | list }}"
  loop_control:
    loop_var: tenant_param_res
  when: 'replication is not defined and tenant_param_status is defined and ("KEY,VALUE\n0 rows selected" in tenant_param_res.stdout)'
  no_log: True

- name: Display the list of parameters to be set for SAP HANA tenant databases backup in IBM Cloud Object Storage
  debug:
    var: tenant_param_to_set
  when: replication is not defined and tenant_param_to_set is defined

- name: Update the parameters for SAP HANA tenant databases in order to allow backup in IBM Cloud Object Storage
  shell: |
    export HISTCONTROL=ignorespace
     su - {{ hana_sid|lower }}adm -c "hdbsql -d {{ item_tenant.0 }} -u SYSTEM -p \"{{ hana_main_password }}\" -i {{ hana_sysno }} \"ALTER SYSTEM ALTER CONFIGURATION ('global.ini', 'DATABASE') SET ('backup' , '{{ item_tenant.1.key }}') = '{{ item_tenant.1.value }}' WITH RECONFIGURE\""
  args:
    warn: false
  loop: "{{ tenant_param_to_set | list }}"
  loop_control:
    loop_var: item_tenant
  when: replication is not defined and tenant_param_to_set is defined
  no_log: True

# In case replication is on
- name: The list of SAP HANA configuration files for tenant databases for the secondary system, in case replication is on
  set_fact:
    cfg_files_tenant: "{{ cfg_files_tenant|default([]) + ['/hana/shared/' ~ hana_sid|upper ~ '/global/hdb/custom/config/DB_' + ten_name + '/global.ini'] }}"
  loop: "{{ tenants | list }}"
  loop_control:
    loop_var: ten_name
  when: replication is defined

- name: The list of SAP HANA configuration files to be updated for the secondary system, in case replication is on
  set_fact:
    cfg_files: "{{ cfg_files_tenant + [ '/hana/shared/' ~ hana_sid|upper ~ '/global/hdb/custom/config/global.ini' ] }}"
  when: replication is defined

- name: All SAP HANA configuration files to be updated for the secondary system, in case replication is on
  debug:
    var: cfg_files
  when: replication is defined

- name: Insert an empty line at the end of SAP HANA configuration files for the secondary system, in case replication is on
  ansible.builtin.lineinfile:
    line: "  "
    insertafter : EOF
    dest: "{{ cfg_file }}"
    state: present
  loop: "{{ cfg_files | list }}"
  loop_control:
    loop_var: cfg_file
  when: replication is defined

- name: Update [backup] section in SAP HANA configuration files for the secondary system, in case replication is on
  ini_file:
    path: "{{ item.0 }}"
    section: "backup"
    option: "{{ item.1.key }}"
    value: "{{ item.1.value }}"
  with_nested:
    - "{{ cfg_files | list }}"
    - "{{ backup_parameters | dict2items }}"
  when: replication is defined
...
